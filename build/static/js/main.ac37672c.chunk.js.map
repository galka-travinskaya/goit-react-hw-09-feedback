{"version":3,"sources":["components/Section/Section.js","components/FeedbackOptions/FeedbackOptions.js","components/Notification/Notification.js","components/Statistics/Statistics.js","data/constans.js","App.js","index.js","components/Statistics/Statistics.module.css","components/Section/Section.module.css","components/FeedbackOptions/FeedbackOptions.module.css"],"names":["Section","title","children","className","s","section","FeedbackBtn","feedback","onLeaveFeedback","button","type","data-feedback","onClick","FeedbackOptions","options","map","option","id","Notification","message","Statistics","statictics","data","total","positivePercentage","list","stat","item","text","FEEDBACK_OPTIONS","App","useState","good","neutral","bad","state","setState","Object","values","reduce","acc","target","dataset","console","log","Number","Math","round","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"yPAkBeA,MAdf,YAAqC,IAAnBC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,SACrB,OACI,0BAASC,UAAWC,IAAEC,QAAtB,UACI,6BAAKJ,IACJC,M,gBCJPI,EAAc,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,SAAUC,EAAqB,EAArBA,gBAC5B,OACI,wBACIL,UAAWC,IAAEK,OACbC,KAAK,SACLC,gBAAeJ,EACfK,QAASJ,EAJb,SAKSD,KAoBFM,EAdS,SAAC,GAAgC,IAA/BC,EAA8B,EAA9BA,QAASN,EAAqB,EAArBA,gBAC/B,OAAOM,EAAQC,KAAI,SAAAC,GAAM,OACrB,cAAC,EAAD,CAEIT,SAAUS,EAAOC,GACjBT,gBAAiBA,GAFZQ,EAAOC,QCZTC,EANM,SAAC,GAAD,IAAEC,EAAF,EAAEA,QAAF,OAAe,4BAAIA,K,gBC4BzBC,EA1BI,SAAC,GAAqD,IAAnDC,EAAkD,EAAlDA,WAAYC,EAAsC,EAAtCA,KAAMC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC7C,OACE,qCACGD,EAAQ,GACP,qBAAIpB,UAAWC,IAAEqB,KAAjB,UACGJ,EAAWN,KAAI,SAAAW,GAAI,OAClB,oBAAIvB,UAAWC,IAAEuB,KAAjB,mBAAyCD,EAAKE,KAA9C,aACEN,EAAKI,EAAKT,KAAO,IADSS,EAAKT,OAInC,qBAAId,UAAWC,IAAEuB,KAAjB,oBAA+BJ,KAC/B,qBAAIpB,UAAWC,IAAEuB,KAAjB,gCAA2CH,EAA3C,UAGO,IAAVD,GAAe,cAAC,EAAD,CAAcJ,QAAQ,0BClB/BU,EAAmB,CAC9B,CAAEZ,GAAI,OAAQW,KAAM,QACpB,CAAEX,GAAI,UAAWW,KAAM,WACvB,CAAEX,GAAI,MAAOW,KAAM,QCKN,SAASE,IAAO,IAAD,EACFC,mBAAS,CACjCC,KAAM,EACNC,QAAS,EACTC,IAAK,IAJqB,mBACrBC,EADqB,KACdC,EADc,KAiBtBb,EAHGc,OAAOC,OAAOH,GAAOI,QAAO,SAACC,EAAKb,GAAN,OAAea,EAAMb,IAAM,GAShE,OACE,gCACE,cAAC,EAAD,CAAS1B,MAAM,wBAAf,SACE,cAAC,EAAD,CACEa,QAASe,EACTrB,gBArBe,SAAC,GAAgB,IAC9BD,EAD6B,EAAbkC,OACIC,QAApBnC,SACRoC,QAAQC,IAAIrC,GACZ6B,EAAS,2BAAKD,GAAN,kBAAc5B,EAAWsC,OAAOV,EAAM5B,GAAY,WAqBxD,cAAC,EAAD,CAASN,MAAM,aAAf,SACE,cAAC,EAAD,CACEoB,WAAYQ,EACZP,KAAMa,EACNZ,MAAOA,EACPC,mBAhBCD,EAAQuB,KAAKC,MAAOZ,EAAMH,KAAOT,EAAS,KAAO,S,MCvB5DyB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACpB,EAAD,MAEFqB,SAASC,eAAe,U,kBCR1BC,EAAOC,QAAU,CAAC,KAAO,2B,kBCAzBD,EAAOC,QAAU,CAAC,QAAU,2B,kBCA5BD,EAAOC,QAAU,CAAC,OAAS,mC","file":"static/js/main.ac37672c.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport s from './Section.module.css'\r\n\r\nfunction Section({title, children}) {\r\n    return (\r\n        <section className={s.section}>\r\n            <h1>{title}</h1>\r\n            {children}\r\n        </section>\r\n    )\r\n};\r\n\r\nSection.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    children:PropTypes.element.isRequired,\r\n}\r\n\r\nexport default Section;","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport s from './FeedbackOptions.module.css'\r\n\r\nconst FeedbackBtn = ({feedback, onLeaveFeedback}) => {\r\n    return (\r\n        <button\r\n            className={s.button} \r\n            type='button' \r\n            data-feedback={feedback} \r\n            onClick={onLeaveFeedback}>\r\n                {feedback}\r\n        </button>\r\n    );\r\n    \r\n}\r\n\r\nconst FeedbackOptions = ({options, onLeaveFeedback}) => {\r\n    return options.map(option => \r\n        <FeedbackBtn \r\n            key={option.id} \r\n            feedback={option.id} \r\n            onLeaveFeedback={onLeaveFeedback}\r\n        />);\r\n}\r\n\r\nFeedbackOptions.propTypes = {\r\n    options: PropTypes.arrayOf(PropTypes.object),\r\n    onLeaveFeedback: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default FeedbackOptions;\r\n","import PropTypes from 'prop-types'\r\n\r\nconst Notification = ({message}) => <p>{message}</p>\r\n\r\nNotification.propTypes = {\r\n    message: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default Notification;","import PropTypes from 'prop-types';\r\nimport Notification from '../Notification/Notification';\r\nimport s from './Statistics.module.css';\r\n\r\nconst Statistics = ({ statictics, data, total, positivePercentage }) => {\r\n  return (\r\n    <>\r\n      {total > 0 && (\r\n        <ul className={s.list}>\r\n          {statictics.map(stat => (\r\n            <li className={s.item} key={stat.id}>{`${stat.text}: ${\r\n              data[stat.id] || 0\r\n            }`}</li>\r\n          ))}\r\n          <li className={s.item}>Total: {total}</li>\r\n          <li className={s.item}>Positive feedback: {positivePercentage}%</li>\r\n        </ul>\r\n      )}\r\n      {total === 0 && <Notification message=\"No feedback given\" />}\r\n    </>\r\n  );\r\n};\r\n\r\nStatistics.propTypes = {\r\n  statictics: PropTypes.array.isRequired,\r\n  data: PropTypes.object.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  //   countPositiveFeedbackPercentage: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","export const FEEDBACK_OPTIONS = [\r\n  { id: 'good', text: 'Good' },\r\n  { id: 'neutral', text: 'Neutral' },\r\n  { id: 'bad', text: 'Bad' },\r\n];\r\n","import React, { useState } from 'react';\n\nimport Section from './components/Section';\nimport FeedbackOptions from './components/FeedbackOptions';\nimport Statistics from './components/Statistics';\n\nimport { FEEDBACK_OPTIONS } from './data/constans';\n\nexport default function App() {\n  const [state, setState] = useState({\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  });\n\n  const handleFeedback = ({ target }) => {\n    const { feedback } = target.dataset;\n    console.log(feedback);\n    setState({ ...state, [feedback]: Number(state[feedback] + 1) });\n  };\n\n  const countTotalFeedback = () => {\n    return Object.values(state).reduce((acc, item) => acc + item, 0);\n  };\n\n  const total = countTotalFeedback();\n\n  const countPositiveFeedbackPercentage = () => {\n    return total ? Math.round((state.good / total) * 100) : 0;\n  };\n\n  return (\n    <div>\n      <Section title=\"Please leave feedback\">\n        <FeedbackOptions\n          options={FEEDBACK_OPTIONS}\n          onLeaveFeedback={handleFeedback}\n        />\n      </Section>\n      <Section title=\"Statistics\">\n        <Statistics\n          statictics={FEEDBACK_OPTIONS}\n          data={state}\n          total={total}\n          positivePercentage={countPositiveFeedbackPercentage()}\n        />\n      </Section>\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Statistics_item__394r_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__3rHEU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__2Vt07\"};"],"sourceRoot":""}